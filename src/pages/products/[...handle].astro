---
import { getProductByHandle } from "./../../utils/shopify";
import { setCache } from "../../utils/cache";

import BaseLayout from "../../layouts/BaseLayout.astro";
import NotFoundLayout from "../../layouts/NotFoundLayout.astro";

import AddToCartForm from "../../components/AddToCartForm.svelte";
import ProductImageGallery from "../../components/ProductImageGallery.astro";
import ProductBreadcrumb from "../../components/ProductBreadcrumb.astro";

const { handle } = Astro.params;
const headers = Astro.request.headers;
const ip = headers.get("x-vercel-forwarded-for") || Astro.clientAddress;
const product = await getProductByHandle({ handle: handle || "", buyerIP: ip });

if (!product) {
  Astro.response.status = 404;
}

const firstVariant = product?.variants.nodes[0];
setCache.short(Astro);


import { getProductDetail } from "../../utils/microcms";
const productInfomation = await getProductDetail(handle as string);
---

{
  !product ? (
    // 取得できなかったとき
    <NotFoundLayout title="Product not found" message="Product not found" />
  ) : (
    // 取得できたとき
    <BaseLayout title={product.title}>
      <section class="container">
        <div class="">
          <div class="">
            <ProductImageGallery images={product.images} />
          </div>
          <div class="mt-8 lg:col-span-5 lg:mt-0">
            <div set:html={productInfomation.material} />
            <div>
              <AddToCartForm
                client:load
                variantId={firstVariant?.id}
                variantQuantityAvailable={firstVariant?.quantityAvailable}
                variantAvailableForSale={firstVariant?.availableForSale}
              />
            </div>
          </div>
        </div>
      </section>
    </BaseLayout>
  )
}
